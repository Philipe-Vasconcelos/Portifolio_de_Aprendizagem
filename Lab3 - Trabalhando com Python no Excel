{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "98793e1b",
   "metadata": {},
   "source": [
    "## Data Science Academy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe957277",
   "metadata": {},
   "source": [
    "### Prevendo o Preço de Ações com Inteligência Artificial em Python Dentro do Excel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d54f4b9f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Empresa</th>\n",
       "      <th>Data</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>IBM</td>\n",
       "      <td>02/23/2023</td>\n",
       "      <td>130.79</td>\n",
       "      <td>3725648.0</td>\n",
       "      <td>131.50</td>\n",
       "      <td>131.7000</td>\n",
       "      <td>128.8600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>IBM</td>\n",
       "      <td>02/22/2023</td>\n",
       "      <td>130.97</td>\n",
       "      <td>3200185.0</td>\n",
       "      <td>131.90</td>\n",
       "      <td>131.9900</td>\n",
       "      <td>130.2900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>IBM</td>\n",
       "      <td>02/21/2023</td>\n",
       "      <td>131.71</td>\n",
       "      <td>4257210.0</td>\n",
       "      <td>134.00</td>\n",
       "      <td>134.3850</td>\n",
       "      <td>131.6600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>IBM</td>\n",
       "      <td>02/17/2023</td>\n",
       "      <td>135.02</td>\n",
       "      <td>3466184.0</td>\n",
       "      <td>134.50</td>\n",
       "      <td>135.5800</td>\n",
       "      <td>133.8900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>IBM</td>\n",
       "      <td>02/16/2023</td>\n",
       "      <td>135.00</td>\n",
       "      <td>2965495.0</td>\n",
       "      <td>135.57</td>\n",
       "      <td>135.9672</td>\n",
       "      <td>134.5900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>IBM</td>\n",
       "      <td>03/01/2022</td>\n",
       "      <td>121.35</td>\n",
       "      <td>4873331.0</td>\n",
       "      <td>122.67</td>\n",
       "      <td>123.3900</td>\n",
       "      <td>120.7000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>IBM</td>\n",
       "      <td>02/28/2022</td>\n",
       "      <td>122.51</td>\n",
       "      <td>6757332.0</td>\n",
       "      <td>122.21</td>\n",
       "      <td>123.3851</td>\n",
       "      <td>121.0388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>IBM</td>\n",
       "      <td>02/25/2022</td>\n",
       "      <td>124.18</td>\n",
       "      <td>4460904.0</td>\n",
       "      <td>122.05</td>\n",
       "      <td>124.2625</td>\n",
       "      <td>121.4500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>IBM</td>\n",
       "      <td>02/24/2022</td>\n",
       "      <td>121.97</td>\n",
       "      <td>6563202.0</td>\n",
       "      <td>120.00</td>\n",
       "      <td>122.1000</td>\n",
       "      <td>118.8100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>IBM</td>\n",
       "      <td>02/23/2022</td>\n",
       "      <td>122.07</td>\n",
       "      <td>4086367.0</td>\n",
       "      <td>124.38</td>\n",
       "      <td>124.7000</td>\n",
       "      <td>121.8700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>252 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Empresa        Data   Close     Volume    Open      High       Low\n",
       "0       IBM  02/23/2023  130.79  3725648.0  131.50  131.7000  128.8600\n",
       "1       IBM  02/22/2023  130.97  3200185.0  131.90  131.9900  130.2900\n",
       "2       IBM  02/21/2023  131.71  4257210.0  134.00  134.3850  131.6600\n",
       "3       IBM  02/17/2023  135.02  3466184.0  134.50  135.5800  133.8900\n",
       "4       IBM  02/16/2023  135.00  2965495.0  135.57  135.9672  134.5900\n",
       "..      ...         ...     ...        ...     ...       ...       ...\n",
       "247     IBM  03/01/2022  121.35  4873331.0  122.67  123.3900  120.7000\n",
       "248     IBM  02/28/2022  122.51  6757332.0  122.21  123.3851  121.0388\n",
       "249     IBM  02/25/2022  124.18  4460904.0  122.05  124.2625  121.4500\n",
       "250     IBM  02/24/2022  121.97  6563202.0  120.00  122.1000  118.8100\n",
       "251     IBM  02/23/2022  122.07  4086367.0  124.38  124.7000  121.8700\n",
       "\n",
       "[252 rows x 7 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Usamos %xl_get para extrair dados da planilha \n",
    "# como pandas dataframe\n",
    "df = %xl_get --cell A1\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "17a126a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot\n",
    "df['Close'].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "335d9436",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Imports\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.preprocessing import MinMaxScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "951cfc96",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Pré-Processamento de dados\n",
    "data = df[['Close']]\n",
    "data = data.dropna()\n",
    "scaler = MinMaxScaler(feature_range = (0, 1))\n",
    "scaled_data = scaler.fit_transform(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f5d08081",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split em dados de treino e teste\n",
    "train_size = int(len(scaled_data) * 0.8)\n",
    "test_size = len(scaled_data) - train_size\n",
    "dados_treino, dados_teste = scaled_data[0:train_size,:], scaled_data[train_size:len(scaled_data),:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a9dde0f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Função para criar a janela de tempo dos dados\n",
    "def create_dataset(dataset, look_back=1):\n",
    "    X, Y = [], []\n",
    "    for i in range(len(dataset)-look_back-1):\n",
    "        a = dataset[i:(i+look_back), 0]\n",
    "        X.append(a)\n",
    "        Y.append(dataset[i + look_back, 0])\n",
    "    return np.array(X), np.array(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d60daf88",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Cria janela de tempo de 30 dias para treinar o modelo\n",
    "look_back = 30\n",
    "X_treino, Y_treino = create_dataset(dados_treino, look_back)\n",
    "X_teste, Y_teste = create_dataset(dados_teste, look_back)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9b890883",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Reshape dos dados\n",
    "X_treino = np.reshape(X_treino, (X_treino.shape[0], X_treino.shape[1], 1))\n",
    "X_teste = np.reshape(X_teste, (X_teste.shape[0], X_teste.shape[1], 1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5486b784",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[0.40060606],\n",
       "        [0.40606061],\n",
       "        [0.42848485],\n",
       "        ...,\n",
       "        [0.85818182],\n",
       "        [0.84787879],\n",
       "        [0.83909091]],\n",
       "\n",
       "       [[0.40606061],\n",
       "        [0.42848485],\n",
       "        [0.52878788],\n",
       "        ...,\n",
       "        [0.84787879],\n",
       "        [0.83909091],\n",
       "        [0.82515152]],\n",
       "\n",
       "       [[0.42848485],\n",
       "        [0.52878788],\n",
       "        [0.52818182],\n",
       "        ...,\n",
       "        [0.83909091],\n",
       "        [0.82515152],\n",
       "        [0.78727273]],\n",
       "\n",
       "       ...,\n",
       "\n",
       "       [[0.74212121],\n",
       "        [0.63242424],\n",
       "        [0.59121212],\n",
       "        ...,\n",
       "        [0.52909091],\n",
       "        [0.48575758],\n",
       "        [0.46454545]],\n",
       "\n",
       "       [[0.63242424],\n",
       "        [0.59121212],\n",
       "        [0.61454545],\n",
       "        ...,\n",
       "        [0.48575758],\n",
       "        [0.46454545],\n",
       "        [0.39939394]],\n",
       "\n",
       "       [[0.59121212],\n",
       "        [0.61454545],\n",
       "        [0.52878788],\n",
       "        ...,\n",
       "        [0.46454545],\n",
       "        [0.39939394],\n",
       "        [0.35030303]]])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_treino"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "762b4bab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[0.55606061],\n",
       "        [0.60090909],\n",
       "        [0.4530303 ],\n",
       "        [0.46878788],\n",
       "        [0.44363636],\n",
       "        [0.55060606],\n",
       "        [0.53      ],\n",
       "        [0.56424242],\n",
       "        [0.65242424],\n",
       "        [0.62666667],\n",
       "        [0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939]],\n",
       "\n",
       "       [[0.60090909],\n",
       "        [0.4530303 ],\n",
       "        [0.46878788],\n",
       "        [0.44363636],\n",
       "        [0.55060606],\n",
       "        [0.53      ],\n",
       "        [0.56424242],\n",
       "        [0.65242424],\n",
       "        [0.62666667],\n",
       "        [0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152]],\n",
       "\n",
       "       [[0.4530303 ],\n",
       "        [0.46878788],\n",
       "        [0.44363636],\n",
       "        [0.55060606],\n",
       "        [0.53      ],\n",
       "        [0.56424242],\n",
       "        [0.65242424],\n",
       "        [0.62666667],\n",
       "        [0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182]],\n",
       "\n",
       "       [[0.46878788],\n",
       "        [0.44363636],\n",
       "        [0.55060606],\n",
       "        [0.53      ],\n",
       "        [0.56424242],\n",
       "        [0.65242424],\n",
       "        [0.62666667],\n",
       "        [0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091]],\n",
       "\n",
       "       [[0.44363636],\n",
       "        [0.55060606],\n",
       "        [0.53      ],\n",
       "        [0.56424242],\n",
       "        [0.65242424],\n",
       "        [0.62666667],\n",
       "        [0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091]],\n",
       "\n",
       "       [[0.55060606],\n",
       "        [0.53      ],\n",
       "        [0.56424242],\n",
       "        [0.65242424],\n",
       "        [0.62666667],\n",
       "        [0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848]],\n",
       "\n",
       "       [[0.53      ],\n",
       "        [0.56424242],\n",
       "        [0.65242424],\n",
       "        [0.62666667],\n",
       "        [0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ]],\n",
       "\n",
       "       [[0.56424242],\n",
       "        [0.65242424],\n",
       "        [0.62666667],\n",
       "        [0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545]],\n",
       "\n",
       "       [[0.65242424],\n",
       "        [0.62666667],\n",
       "        [0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ]],\n",
       "\n",
       "       [[0.62666667],\n",
       "        [0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636]],\n",
       "\n",
       "       [[0.67515152],\n",
       "        [0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636],\n",
       "        [0.20545455]],\n",
       "\n",
       "       [[0.62878788],\n",
       "        [0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636],\n",
       "        [0.20545455],\n",
       "        [0.26212121]],\n",
       "\n",
       "       [[0.35090909],\n",
       "        [0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636],\n",
       "        [0.20545455],\n",
       "        [0.26212121],\n",
       "        [0.24575758]],\n",
       "\n",
       "       [[0.26060606],\n",
       "        [0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636],\n",
       "        [0.20545455],\n",
       "        [0.26212121],\n",
       "        [0.24575758],\n",
       "        [0.25757576]],\n",
       "\n",
       "       [[0.27242424],\n",
       "        [0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636],\n",
       "        [0.20545455],\n",
       "        [0.26212121],\n",
       "        [0.24575758],\n",
       "        [0.25757576],\n",
       "        [0.27424242]],\n",
       "\n",
       "       [[0.25969697],\n",
       "        [0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636],\n",
       "        [0.20545455],\n",
       "        [0.26212121],\n",
       "        [0.24575758],\n",
       "        [0.25757576],\n",
       "        [0.27424242],\n",
       "        [0.25333333]],\n",
       "\n",
       "       [[0.25484848],\n",
       "        [0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636],\n",
       "        [0.20545455],\n",
       "        [0.26212121],\n",
       "        [0.24575758],\n",
       "        [0.25757576],\n",
       "        [0.27424242],\n",
       "        [0.25333333],\n",
       "        [0.19060606]],\n",
       "\n",
       "       [[0.26666667],\n",
       "        [0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636],\n",
       "        [0.20545455],\n",
       "        [0.26212121],\n",
       "        [0.24575758],\n",
       "        [0.25757576],\n",
       "        [0.27424242],\n",
       "        [0.25333333],\n",
       "        [0.19060606],\n",
       "        [0.11454545]],\n",
       "\n",
       "       [[0.30787879],\n",
       "        [0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636],\n",
       "        [0.20545455],\n",
       "        [0.26212121],\n",
       "        [0.24575758],\n",
       "        [0.25757576],\n",
       "        [0.27424242],\n",
       "        [0.25333333],\n",
       "        [0.19060606],\n",
       "        [0.11454545],\n",
       "        [0.14969697]],\n",
       "\n",
       "       [[0.33272727],\n",
       "        [0.35818182],\n",
       "        [0.3430303 ],\n",
       "        [0.38484848],\n",
       "        [0.38121212],\n",
       "        [0.37727273],\n",
       "        [0.44121212],\n",
       "        [0.43545455],\n",
       "        [0.42121212],\n",
       "        [0.41757576],\n",
       "        [0.35393939],\n",
       "        [0.32515152],\n",
       "        [0.34818182],\n",
       "        [0.31909091],\n",
       "        [0.33909091],\n",
       "        [0.31484848],\n",
       "        [0.2869697 ],\n",
       "        [0.24454545],\n",
       "        [0.1930303 ],\n",
       "        [0.19363636],\n",
       "        [0.20545455],\n",
       "        [0.26212121],\n",
       "        [0.24575758],\n",
       "        [0.25757576],\n",
       "        [0.27424242],\n",
       "        [0.25333333],\n",
       "        [0.19060606],\n",
       "        [0.11454545],\n",
       "        [0.14969697],\n",
       "        [0.20030303]]])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b8584622",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Imports\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, LSTM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e4992c5d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define o modelo\n",
    "modelo = Sequential()\n",
    "modelo.add(LSTM(50, input_shape  = (look_back, 1)))\n",
    "modelo.add(Dense(1))\n",
    "modelo.compile(loss='mean_squared_error', optimizer='adam')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "719506d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "6/6 [==============================] - 1s 7ms/step - loss: 0.2290\n",
      "Epoch 2/10\n",
      "6/6 [==============================] - 0s 6ms/step - loss: 0.0675\n",
      "Epoch 3/10\n",
      "6/6 [==============================] - 0s 6ms/step - loss: 0.0283\n",
      "Epoch 4/10\n",
      "6/6 [==============================] - 0s 5ms/step - loss: 0.0251\n",
      "Epoch 5/10\n",
      "6/6 [==============================] - 0s 5ms/step - loss: 0.0173\n",
      "Epoch 6/10\n",
      "6/6 [==============================] - 0s 5ms/step - loss: 0.0199\n",
      "Epoch 7/10\n",
      "6/6 [==============================] - 0s 6ms/step - loss: 0.0177\n",
      "Epoch 8/10\n",
      "6/6 [==============================] - 0s 5ms/step - loss: 0.0155\n",
      "Epoch 9/10\n",
      "6/6 [==============================] - 0s 5ms/step - loss: 0.0153\n",
      "Epoch 10/10\n",
      "6/6 [==============================] - 0s 6ms/step - loss: 0.0147\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x2460017da00>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Treinamento do modelo\n",
    "modelo.fit(X_treino, Y_treino, epochs = 10, batch_size = 32)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "ad72ec37",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 0s 204ms/step\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.404951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.401569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.398410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.392400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.387703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.381446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.373210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.361600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.345783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.330065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.316290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.308908</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.302887</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.299562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.299120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.298357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.293036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.281011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.270728</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.265136</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           0\n",
       "0   0.404951\n",
       "1   0.401569\n",
       "2   0.398410\n",
       "3   0.392400\n",
       "4   0.387703\n",
       "5   0.381446\n",
       "6   0.373210\n",
       "7   0.361600\n",
       "8   0.345783\n",
       "9   0.330065\n",
       "10  0.316290\n",
       "11  0.308908\n",
       "12  0.302887\n",
       "13  0.299562\n",
       "14  0.299120\n",
       "15  0.298357\n",
       "16  0.293036\n",
       "17  0.281011\n",
       "18  0.270728\n",
       "19  0.265136"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Previsões com dados de teste\n",
    "pred = modelo.predict(X_teste)\n",
    "pred = pd.DataFrame(data = pred)\n",
    "pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7fef79f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[130.9334  ],\n",
       "       [130.82176 ],\n",
       "       [130.71754 ],\n",
       "       [130.51921 ],\n",
       "       [130.3642  ],\n",
       "       [130.15771 ],\n",
       "       [129.88593 ],\n",
       "       [129.50282 ],\n",
       "       [128.98083 ],\n",
       "       [128.46216 ],\n",
       "       [128.00755 ],\n",
       "       [127.76396 ],\n",
       "       [127.56528 ],\n",
       "       [127.45554 ],\n",
       "       [127.44097 ],\n",
       "       [127.41577 ],\n",
       "       [127.24018 ],\n",
       "       [126.84338 ],\n",
       "       [126.504036],\n",
       "       [126.31947 ]], dtype=float32)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Inverte a escala de volta ao padrão original\n",
    "pred = scaler.inverse_transform(pred)\n",
    "Y_teste = scaler.inverse_transform([Y_teste])\n",
    "pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "7d82a8b9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MSE:  11.488351914256949\n",
      "RMSE:  3.3894471399118986\n"
     ]
    }
   ],
   "source": [
    "# Calcula o erro do modelo\n",
    "MSE = mean_squared_error(Y_teste[0], pred[:,0])\n",
    "RMSE = np.sqrt(MSE)\n",
    "print(\"MSE: \", MSE)\n",
    "print(\"RMSE: \", RMSE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7dd6d1b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Atual x previsto\n",
    "plt.plot(Y_teste[0], label = 'Valor Real')\n",
    "plt.plot(pred[:,0], label = 'Valor Previsto')\n",
    "plt.title('Atual x Previsto')\n",
    "plt.xlabel('Tempo')\n",
    "plt.ylabel('Valor')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f884a190",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Usamos %xl_set para gravar as previsões no Excel\n",
    "%xl_set pred --cell H2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47c5e589",
   "metadata": {},
   "source": [
    "# Fim"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
